package core.basesyntax;

import core.basesyntax.dao.animal.AnimalDao;
import core.basesyntax.dao.animal.AnimalDaoImpl;
import core.basesyntax.dao.figure.FigureDao;
import core.basesyntax.dao.figure.FigureDaoImpl;
import core.basesyntax.dao.ma.CoachDao;
import core.basesyntax.dao.ma.CoachDaoImpl;
import core.basesyntax.dao.ma.MentorDao;
import core.basesyntax.dao.ma.MentorDaoImpl;
import core.basesyntax.dao.ma.PersonDao;
import core.basesyntax.dao.ma.PersonDaoImpl;
import core.basesyntax.dao.machine.MachineDao;
import core.basesyntax.dao.machine.MachineDaoImpl;
import core.basesyntax.model.figure.Circle;
import core.basesyntax.model.figure.Triangle;
import core.basesyntax.model.ma.Coach;
import core.basesyntax.model.ma.Mentor;
import core.basesyntax.model.ma.Person;
import core.basesyntax.model.machine.Car;
import core.basesyntax.model.machine.Machine;
import core.basesyntax.model.machine.Truck;
import core.basesyntax.model.zoo.Animal;
import core.basesyntax.model.zoo.Cat;
import core.basesyntax.model.zoo.Dog;

public class Main {
    public static void main(String[] args) {
        AnimalDao animalDao = new AnimalDaoImpl(HibernateUtil.getSessionFactory());
        Animal animal = new Animal();
        animal.setName("Barboss");
        animalDao.save(animal);
        Cat cat = new Cat();
        cat.setColor("red");
        cat.setNumberOfLives(9);
        cat.setName("Mursik");
        cat.setAge(3);
        animal.setAge(2);
        animalDao.save(cat);
        Dog dog = new Dog();
        dog.setName("Tusik");
        dog.setAge(5);
        dog.setTailLength(15);
        dog.setOwner("Billy");
        animalDao.save(dog);
        animalDao.findByNameFirstLetter('M').forEach(System.out::println);

        FigureDao<Circle> circleFigureDao = new FigureDaoImpl<>(HibernateUtil.getSessionFactory());
        Circle circle = new Circle();
        circle.setColor("red");
        circle.setRadius(13);
        circleFigureDao.save(circle);
        circle.setColor("blue");
        circle.setRadius(20);
        circleFigureDao.save(circle);
        circleFigureDao.findByColor("blue", Circle.class).forEach(System.out::println);
        FigureDao<Triangle> triangleFigureDao =
                new FigureDaoImpl<>(HibernateUtil.getSessionFactory());
        Triangle triangle = new Triangle();
        triangle.setColor("green");
        triangle.setArea(25.2);
        triangleFigureDao.save(triangle);
        triangle.setColor("yellow");
        triangle.setArea(10.8);
        triangleFigureDao.save(triangle);
        triangleFigureDao.findByColor("yellow", Triangle.class).forEach(System.out::println);

        PersonDao personDao = new PersonDaoImpl(HibernateUtil.getSessionFactory());
        Person person = new Person();
        person.setName("Bob");
        person.setAge(30);
        personDao.save(person);
        MentorDao mentorDao = new MentorDaoImpl(HibernateUtil.getSessionFactory());
        Mentor mentor = new Mentor();
        mentor.setName("Sonya");
        mentor.setAge(25);
        mentorDao.save(mentor);
        mentor.setName("Taras");
        mentor.setAge(40);
        mentorDao.save(mentor);
        mentorDao.findByAgeGreaterThan(30).forEach(System.out::println);
        Coach coach = new Coach();
        coach.setName("Bogdan");
        coach.setAge(28);
        coach.setTrack(Coach.Track.JAVA);
        coach.setExperience(5);
        CoachDao coachDao = new CoachDaoImpl(HibernateUtil.getSessionFactory());
        coachDao.save(coach);
        coach.setName("Denis");
        coach.setAge(35);
        coach.setTrack(Coach.Track.QA);
        coach.setExperience(2);
        coachDao.save(coach);
        coachDao.findByExperienceGreaterThan(1).forEach(System.out::println);

        MachineDao machineDao = new MachineDaoImpl(HibernateUtil.getSessionFactory());
        Machine machine = new Machine();
        machine.setMaker("country where it made");
        machine.setYear(2020);
        machineDao.save(machine);
        Car car = new Car();
        car.setModel("BMW");
        car.setMaker("Germany");
        car.setYear(2015);
        car.setHorsePower(220);
        machineDao.save(car);
        Truck truck = new Truck();
        truck.setMaker("Holland");
        truck.setYear(2018);
        truck.setColor("yellow");
        truck.setMaxAllowedWeight(480.50);
        machineDao.save(truck);
        machineDao.findByAgeOlderThan(2019).forEach(System.out::println);
    }
}
